!function(n,a){"function"==typeof define&&define.amd?define(["jquery"],a):"object"==typeof module?module.exports=a(require("jquery")):n.APIDOC=a(jQuery)}(this,function(n){var a=n("#version-selector");if(a.length){var e={};a.on("change",function(){e.versionChanged(n(this).val())}),n("li.bundlenavi").on("click",d);var i=null;e.versionChanged=function(a){return i?void e.renderNavigation(i[a]):void n.ajax("/api.json").done(function(t){i={},n.each(t,function(n,a){i[a.version]=a.api}),e.renderNavigation(i[a])}).fail(function(){alert("error loading version info")})},e.renderNavigation=function(i){var t=n("#bundlenavi");t.find("div.generated").remove(),n.each(i,function(a,e){var i=[];n.each(e,function(n,e){i.push({name:n,desc:e.desc,path:a+"/"+n})});var o=l(a,i);t.append(o)}),e.showBundleDoc(a.val())};var t=n('<div class="panel panel-default generated"><div class="panel-heading"></div><div class="panel-body"><ul></ul></div></div>'),o=n('<li data-path="path/to/bundle" class="bundlenavi"></li>'),l=function(n,a){var e=t.clone();e.find("div.panel-heading").append(n);var i=e.find("ul");return a.forEach(function(n){var a=o.clone();a.attr("data-path",n.path),a.attr("title",n.desc),a.append(n.name),a.on("click",d),i.append(a)}),e},d=function(){var i=n(this).data("path");e.showBundleDoc(a.val(),i)},c=function(){n("pre code").each(function(n,a){hljs.highlightBlock(a)})};return e.showBundleDoc=function(a,e){var i="/apidoc/"+a+"/"+(e||"");n("#bundlecontent").load(i,function(){c()})},e}}),$(function(){var n=function(){var n=document.location.pathname,a=n.split("/")[1],e=$('nav ul li a[href="/'+a+'"]');$("nav ul li").removeClass("active"),e.parent().addClass("active")};n(),hljs.initHighlightingOnLoad(),$("table.oskari-sortable").stupidtable(),$(".menu-icon").click(function(){$("nav").toggleClass("active")})});